pour Git = git bash

pwd 
ls
ls -l 

cd ..
clear (efface les commandes visuellement)
history (toutes les commandes tapées)

mkdir toto création fichier toto

rmdir toto suppression toto

git --version

git config --global user.name "David MARTINS"

git init (dans le bon fichier)

touch README.md 

code .README.md pour ouvrir le document dans visual code studio

git add fichier -->   new file:   README.md

pour vim 
------------------------------------------
ligne qui commence par un # : commentaires
touche i pour inserer des caractères !

pour sortir du mode insertion touche échappe

pour sauver et quitter :wq  (write - quit) 
------------------------------------------

git status = donne l'état et s'il y a des modifs enregistrées ou pas
 git commit -m "message second modif"

git diff --staged ficher.extension pour comparé un commit avec un état indexé :  git add .
git diff ficher.extension pour comparé un commit avec un état dans espace de travail  : avant git add .

git log ==> donne tous les commit 

--------------------------------------------

git branch toto pour son travail perso 
git checkout ou git switch toto --> on est sur une nouvelle branche et non master ou main 

git merge nom de la branche mais il faut etre sur la branche à laquelle on déplace les modifs

git switch -c tutu création d'une nouvelle branche + on se place dessus 

git push origin nom de la branche origin est le nom par défaut commit -> serveur 

git push -force --> force sur le push et meme suprime des documents A,B -push -force> A,B,C

git pull origin nom de la branche origin est le nom par défaut commit  <- serveur

git fetch mets a jour le depot local 

git clone lien sur github ! http............

git tag pour consulter la liste des tags

git checkout + un numero de commit pris dans git log : qsdoighvnxoqnsdvmo

git reset HEAD~+ numero de commit ==> reviens a l'état du numéro de commit ou nbre de commits a annulés / HEAD~1

$ git remote -v
$ git remote add origin git@github.com:Dav-Mar-joa/Ifocop_Back_up2.git

git remote -v 

ERROR
--> $ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'

ERROR

git pull pour mettre a jour 
git merge --abort arrete le merge

git push -f --> force le push

git stash --> enregirste dans WIP sur la master 
le stash {0} est le dernier stach ajouté